<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerMove</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init vars (like movement)
hsp = 0;
vsp = 0;

acc = ($200/6)  / $200;
dcc = ($200/10) / $200;

msp = $32c / $200;
top = $5ff / $200;

dir = 1;

grv1 = $50 / $200;
grv2 = $20 / $200;

grv = grv1;

ground = true;
varJmp = true;

jmp =  $500 / $200;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// init other vars

canShoot = true;
canMove = true;
interact = false;

prevSprite = sprite_index;

camTargetX = 0;
camTargetY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Camera handling

if !global.gamePaused {

    camTargetX = clamp(camTargetX + dir, -($8000/$200), ($8000/$200));
    
    {
        if camTargetY &gt; 1 then camTargetY -= 1;
        if camTargetY &lt; 1 then camTargetY += 1;
    }
    
    global.targetX = round(x) + camTargetX;
    global.targetY = round(y) + camTargetY
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// disable objects out of view

instance_deactivate_all(true);

instance_activate_region(view_xview[0] - 80, view_yview[0] - 80, view_wview[0] + 80, view_hview[0] + 80, true);

instance_activate_object(objSolid);
instance_activate_object(objGame);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement (for some reason accurate to CS)

if !global.gamePaused &amp;&amp; canMove {
    
    
    // this is normal :)
    var moveKeys = -keyboard_check(vk_left) + keyboard_check(vk_right)
    
    // Moving Horizontally
    if moveKeys = -1 {
        if hsp &gt; -msp then hsp -= acc;
        dir = -1;
        if interact then interact = 0;
    } else if moveKeys = 1 {
        if hsp &lt; msp then hsp += acc;
        dir = 1;
        if interact then interact = 0;
    } else {
        if hsp &gt; dcc then hsp -= dcc;
        else if hsp &lt; -dcc then hsp += dcc;
        else hsp = 0;
    }
    
    // Jumping
    if keyboard_check_pressed(ord("Z")) &amp;&amp; ground {
        vsp = -jmp;
        if interact then interact = 0;
    }
    
    // Gravity
    if vsp &lt; 0 &amp;&amp; keyboard_check(ord("Z")) {
        vsp += grv2;
    } else vsp += grv1;
    
    
    // Clamping
    if hsp &lt; -top then hsp = -top;
    if vsp &lt; -top then vsp = -top;
    
    if hsp &gt;  top then hsp =  top;
    if vsp &gt;  top then vsp =  top;
    
   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Collision

if !global.gamePaused {    
    if (place_meeting(x+hsp,y,objSolid)){
        //Up slope
        var yplus;
        yplus=0;
        while(place_meeting(x+hsp,y-yplus,objSolid)&amp;&amp;yplus&lt;=abs(hsp)) yplus+=1; //change the abs(hsp) to 3*abs(hsp) if you want to be able to go up a 3-1 slope, etc..
        if(place_meeting(x+hsp,y-yplus,objSolid)){
            while(!place_meeting(x+sign(hsp),y,objSolid)) x += sign(hsp);
            hsp=0;
        }else{
            y-=yplus;
        }
    }
    x += hsp;
    
    //Down slope
    if !place_meeting(x,y,objSolid) &amp;&amp; vsp &gt;= 0 &amp;&amp; place_meeting(x,y+2+abs(hsp),objSolid){
        while(!place_meeting(x,y+1,objSolid)) {
            y += 1;
            
        }
    }
    
    //Vertical collisions
    if place_meeting(x,y+vsp,objSolid) {
        while !place_meeting(x,y+sign(vsp),objSolid) {
            y += sign(vsp);
        }
        vsp = 0;
    }
    y += vsp;
    
    //Do the swag
    if place_meeting(x,y+1,objSolid) /*or (position_meeting(x,y+16,objPlatform) &amp;&amp; vsp &gt;= 0)*/ ground = true;
    else ground = false;
    
    /*One Way Solid Colissions
    if position_meeting(round(x), round(y) + 16, objPlatform) &amp;&amp; vsp &gt; 0  {
        var wall;
        wall = instance_position(round(x), round(y) + 16, objPlatform);
        if (vsp &gt; 0) { //down
            y = (wall.bbox_top) - sprite_bbox_bottom;
        }
        vsp = 0;
    }*/
    
    // side collisions
    
    if x &lt;= 8 then {
        x = 8;
        hsp = 0;
    };
    
    if x &gt;= room_width - 8 then {
        x = room_width - 8;
        hsp = 0;
    };
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animator

if !global.gamePaused {
    if !interact then {
        if ground then {
            if hsp = 0 then {
                image_speed = 0;
                image_index = 1;
            } else {
                image_speed = 0.1;
            }
        } else {
            if vsp &lt; 0 then {
                image_speed = 0;
                image_index = 0;
            } else {
                image_speed = 0;
                image_index = 2;
            }
        }
    } else {
        sprite_index = sprPlayerInteract;
        image_speed = 0.2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,round(x),round(y),dir,1,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
